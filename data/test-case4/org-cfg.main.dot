digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x564ba9d05bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{entry:\l  %head = alloca %struct.node*, align 8\l  %first = alloca %struct.node*, align 8\l  %temp = alloca %struct.node*, align 8\l  %count = alloca i32, align 4\l  %choice = alloca i32, align 4\l  store %struct.node* null, %struct.node** %temp, align 8\l  store i32 0, i32* %count, align 4\l  store i32 1, i32* %choice, align 4\l  store %struct.node* null, %struct.node** %first, align 8\l  br label %while.cond\l}"];
	Node0x564ba9d05bf0 -> Node0x564ba9d06d30;
	Node0x564ba9d06d30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.cond:                                       \l  %0 = load i32, i32* %choice, align 4\l  %tobool = icmp ne i32 %0, 0\l  br i1 %tobool, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x564ba9d06d30:s0 -> Node0x564ba9d06f60;
	Node0x564ba9d06d30:s1 -> Node0x564ba9d06fe0;
	Node0x564ba9d06f60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{while.body:                                       \l  %call = call noalias i8* @malloc(i64 16) #3\l  %1 = bitcast i8* %call to %struct.node*\l  store %struct.node* %1, %struct.node** %head, align 8\l  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8],\l... [21 x i8]* @.str, i64 0, i64 0))\l  %2 = load %struct.node*, %struct.node** %head, align 8\l  %num = getelementptr inbounds %struct.node, %struct.node* %2, i32 0, i32 0\l  %call2 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3\l... x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* %num)\l  %3 = load %struct.node*, %struct.node** %first, align 8\l  %cmp = icmp ne %struct.node* %3, null\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x564ba9d06f60:s0 -> Node0x564ba9d08150;
	Node0x564ba9d06f60:s1 -> Node0x564ba9d08220;
	Node0x564ba9d08150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{if.then:                                          \l  %4 = load %struct.node*, %struct.node** %head, align 8\l  %5 = load %struct.node*, %struct.node** %temp, align 8\l  %ptr = getelementptr inbounds %struct.node, %struct.node* %5, i32 0, i32 1\l  store %struct.node* %4, %struct.node** %ptr, align 8\l  %6 = load %struct.node*, %struct.node** %head, align 8\l  store %struct.node* %6, %struct.node** %temp, align 8\l  br label %if.end\l}"];
	Node0x564ba9d08150 -> Node0x564ba9d08740;
	Node0x564ba9d08220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{if.else:                                          \l  %7 = load %struct.node*, %struct.node** %head, align 8\l  store %struct.node* %7, %struct.node** %temp, align 8\l  store %struct.node* %7, %struct.node** %first, align 8\l  br label %if.end\l}"];
	Node0x564ba9d08220 -> Node0x564ba9d08740;
	Node0x564ba9d08740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.end:                                           \l  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8\l  %call3 = call i32 @fflush(%struct._IO_FILE* %8)\l  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8],\l... [39 x i8]* @.str.2, i64 0, i64 0))\l  %call5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3\l... x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* %choice)\l  br label %while.cond, !llvm.loop !2\l}"];
	Node0x564ba9d08740 -> Node0x564ba9d06d30;
	Node0x564ba9d06fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{while.end:                                        \l  %9 = load %struct.node*, %struct.node** %temp, align 8\l  %ptr6 = getelementptr inbounds %struct.node, %struct.node* %9, i32 0, i32 1\l  store %struct.node* null, %struct.node** %ptr6, align 8\l  %10 = load %struct.node*, %struct.node** %first, align 8\l  store %struct.node* %10, %struct.node** %temp, align 8\l  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8],\l... [32 x i8]* @.str.3, i64 0, i64 0))\l  br label %while.cond8\l}"];
	Node0x564ba9d06fe0 -> Node0x564ba9d0a130;
	Node0x564ba9d0a130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.cond8:                                      \l  %11 = load %struct.node*, %struct.node** %temp, align 8\l  %cmp9 = icmp ne %struct.node* %11, null\l  br i1 %cmp9, label %while.body10, label %while.end14\l|{<s0>T|<s1>F}}"];
	Node0x564ba9d0a130:s0 -> Node0x564ba9d0a660;
	Node0x564ba9d0a130:s1 -> Node0x564ba9d0a6e0;
	Node0x564ba9d0a660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{while.body10:                                     \l  %12 = load %struct.node*, %struct.node** %temp, align 8\l  %num11 = getelementptr inbounds %struct.node, %struct.node* %12, i32 0, i32 0\l  %13 = load i32, i32* %num11, align 8\l  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8],\l... [5 x i8]* @.str.4, i64 0, i64 0), i32 %13)\l  %14 = load i32, i32* %count, align 4\l  %inc = add nsw i32 %14, 1\l  store i32 %inc, i32* %count, align 4\l  %15 = load %struct.node*, %struct.node** %temp, align 8\l  %ptr13 = getelementptr inbounds %struct.node, %struct.node* %15, i32 0, i32 1\l  %16 = load %struct.node*, %struct.node** %ptr13, align 8\l  store %struct.node* %16, %struct.node** %temp, align 8\l  br label %while.cond8, !llvm.loop !4\l}"];
	Node0x564ba9d0a660 -> Node0x564ba9d0a130;
	Node0x564ba9d0a6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{while.end14:                                      \l  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8],\l... [6 x i8]* @.str.5, i64 0, i64 0))\l  %17 = load i32, i32* %count, align 4\l  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8],\l... [31 x i8]* @.str.6, i64 0, i64 0), i32 %17)\l  ret void\l}"];
}
