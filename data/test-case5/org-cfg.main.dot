digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x562fc1ef84f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{entry:\l  %retval = alloca i32, align 4\l  %t1 = alloca i32, align 4\l  %t2 = alloca i32, align 4\l  %nextTerm = alloca i32, align 4\l  %n = alloca i32, align 4\l  store i32 0, i32* %retval, align 4\l  store i32 0, i32* %t1, align 4\l  store i32 1, i32* %t2, align 4\l  store i32 0, i32* %nextTerm, align 4\l  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8],\l... [26 x i8]* @.str, i64 0, i64 0))\l  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3\l... x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* %n)\l  %0 = load i32, i32* %t1, align 4\l  %1 = load i32, i32* %t2, align 4\l  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8],\l... [27 x i8]* @.str.2, i64 0, i64 0), i32 %0, i32 %1)\l  %2 = load i32, i32* %t1, align 4\l  %3 = load i32, i32* %t2, align 4\l  %add = add nsw i32 %2, %3\l  store i32 %add, i32* %nextTerm, align 4\l  br label %while.cond\l}"];
	Node0x562fc1ef84f0 -> Node0x562fc1ef9e10;
	Node0x562fc1ef9e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.cond:                                       \l  %4 = load i32, i32* %nextTerm, align 4\l  %5 = load i32, i32* %n, align 4\l  %cmp = icmp sle i32 %4, %5\l  br i1 %cmp, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x562fc1ef9e10:s0 -> Node0x562fc1efa140;
	Node0x562fc1ef9e10:s1 -> Node0x562fc1efa330;
	Node0x562fc1efa140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{while.body:                                       \l  %6 = load i32, i32* %nextTerm, align 4\l  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8],\l... [5 x i8]* @.str.3, i64 0, i64 0), i32 %6)\l  %7 = load i32, i32* %t2, align 4\l  store i32 %7, i32* %t1, align 4\l  %8 = load i32, i32* %nextTerm, align 4\l  store i32 %8, i32* %t2, align 4\l  %9 = load i32, i32* %t1, align 4\l  %10 = load i32, i32* %t2, align 4\l  %add4 = add nsw i32 %9, %10\l  store i32 %add4, i32* %nextTerm, align 4\l  br label %while.cond, !llvm.loop !2\l}"];
	Node0x562fc1efa140 -> Node0x562fc1ef9e10;
	Node0x562fc1efa330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{while.end:                                        \l  ret i32 0\l}"];
}
